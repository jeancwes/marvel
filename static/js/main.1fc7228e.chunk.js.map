{"version":3,"sources":["components/comic/comic-table/ComicTable.jsx","components/comic/Comic.jsx","components/dialog/Dialog.jsx","environment/environment.js","Email.js","components/comics/comics-table/ComicsTable.jsx","components/search/Search.jsx","components/comics/Comics.jsx","App.js","reportWebVitals.js","index.js"],"names":["ComicTable","comic","className","id","pageCount","description","format","Comic","title","src","thumbnail","path","extension","alt","Dialog","opened","onClose","header","content","footer","type","onClick","Email","comics","selectedComics","useState","name","setName","email","setEmail","message","setMessage","valid","setValid","useEffect","some","sc","onSubmit","e","preventDefault","reduce","accumulator","index","templateParams","to_name","to_email","from_name","emailjs","send","environment","then","response","alert","text","error","placeholder","onChange","target","value","disabled","ComicsTable","setOpened","setComic","setSelectedComics","map","length","role","selectedIndex","checked","axios","require","Search","onSearch","titleStartsWith","setTitleStartsWith","timeoutId","setTimeout","get","console","log","data","results","catch","clearTimeout","currentTarget","Comics","setComics","App","exact","from","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fc7228e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function ComicTable({ comic }) {\r\n  return (\r\n    <section>\r\n      <table className=\"table table-striped\">\r\n        <caption>Detalhes do Quadrinho</caption>\r\n        <tbody>\r\n          <tr>\r\n            <td>Id</td>\r\n            <td>{comic.id}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Páginas</td>\r\n            <td>{comic.pageCount}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Descrição</td>\r\n            <td>{comic.description}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Formato</td>\r\n            <td>{comic.format}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Comic.css'\r\n\r\nimport ComicTable from './comic-table/ComicTable';\r\n\r\nexport default function Comic({ comic }) {\r\n  return (\r\n    <>\r\n      {(comic) && (\r\n        <section className=\"comic\">\r\n          <header className=\"comic-header\">\r\n            <h2>{comic.title}</h2>\r\n          </header>\r\n          <section className=\"comic-thumbnail\">\r\n            <img className=\"comic-thumbnail-image\" \r\n              src={`${comic.thumbnail.path}.${comic.thumbnail.extension}`} \r\n              alt=\"thumbnail\" />\r\n          </section>\r\n          <section className=\"comic-info\">\r\n            <ComicTable comic={comic} />\r\n          </section>\r\n        </section>\r\n      )};\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Dialog.css'\r\n\r\nexport default function Dialog({\r\n  opened,\r\n  onClose,\r\n  header,\r\n  content,\r\n  footer\r\n}) {\r\n\r\n  return (\r\n    <>\r\n      {(opened) && (\r\n        <div className=\"dialog-backdrop\">\r\n          <section className=\"dialog\">\r\n            <header className=\"dialog-header\">\r\n              {header}\r\n              <button type=\"button\" className=\"link float-right\" \r\n                onClick={() => onClose(!opened)}>\r\n                  Fechar Diálogo\r\n              </button>\r\n            </header>\r\n            <section className=\"dialog-content\">\r\n              {content}\r\n            </section>\r\n            <footer className=\"dialog-footer\">\r\n              {footer}\r\n            </footer>\r\n          </section>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","export default {\r\n    SERVICE_ID: 'service_qeaa29d',\r\n    USER_ID: 'user_vcnmCJvbZ6ioKRN5GOHbb',\r\n    TEMPLATE_ID: 'template_a7s8pw7'\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport emailjs from 'emailjs-com'\r\nimport environment from './environment/environment'\r\n\r\nexport default function Email({ comics, selectedComics }) {\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [valid, setValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!name || !email || !selectedComics.some((sc) => sc === true)) {\r\n      return setValid(false);\r\n    }\r\n    return setValid(true);\r\n  }, [email, name, selectedComics]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(comics.reduce((accumulator, comic, index) => {\r\n      if (selectedComics[index] === false) {\r\n        return accumulator;\r\n      }\r\n      return accumulator + `\r\n          <h2>${comic.title}</h2> <br>\r\n          <img src=\"${comic.thumbnail.path}.${comic.thumbnail.extension}\" \r\n            width=\"200\" height=\"250\" alt=\"image\" /> <br>\r\n          <p>${comic.description}</p> <br>\r\n        `;\r\n      }, '')\r\n    );\r\n\r\n    var templateParams = {\r\n      to_name: name,\r\n      to_email: email,\r\n      from_name: 'Marvel Assessment',\r\n      message: `\r\n        <!DOCTYPE html>\r\n        <html lang=\"en\">\r\n        <head>\r\n            <meta charset=\"UTF-8\">\r\n            <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n            <title>Marvel Assessment</title>\r\n        </head>\r\n            <body>\r\n              ${message}\r\n            </body>\r\n        </html>\r\n      `\r\n    };\r\n\r\n    emailjs.send(\r\n      environment.SERVICE_ID,\r\n      environment.TEMPLATE_ID,\r\n      templateParams,\r\n      environment.USER_ID)\r\n      .then((response) => {\r\n        alert('Email Enviado', response.text);\r\n      }, (error) => {\r\n        alert('Ocorreu um Erro', error.text);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form className=\"email-form\" onSubmit={(e) => onSubmit(e)}>\r\n        <h2>\r\n          Enviar Quadrinhos por Email\r\n        </h2>\r\n        <input type=\"text\" placeholder=\"Informe seu Nome\"\r\n          onChange={(e) => setName(e.target.value)} />\r\n        <input type=\"email\" placeholder=\"Informe seu Email\"\r\n          onChange={(e) => setEmail(e.target.value)} />\r\n        <button type=\"submit\" disabled={!valid}>Enviar</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport Comic from '../../comic/Comic';\r\nimport Dialog from '../../dialog/Dialog';\r\nimport Email from '../../../Email';\r\n\r\nexport default function ComicsTable({ comics }) {\r\n\r\n  const [opened, setOpened] = useState(false);\r\n  const [comic, setComic] = useState();\r\n  const [selectedComics, setSelectedComics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setSelectedComics(\r\n      comics.map((comic) => false)\r\n    );\r\n  }, [comics]);\r\n\r\n  const toggleSelectedComic = (selectedIndex) => {\r\n    setSelectedComics(\r\n      selectedComics.map((comic, index) => {\r\n        if (selectedIndex === index) {\r\n          return !comic;\r\n        }\r\n        return comic;\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"table-responsive\">\r\n        {(comics && comics.length > 0) && (\r\n          <table className=\"table table-striped\" role=\"table\">\r\n            <caption role=\"caption\">\r\n              {comics.length} Quadrinhos\r\n            </caption>\r\n            <thead>\r\n              <tr role=\"row\">\r\n                <th></th>\r\n                <th>Id</th>\r\n                <th>Título</th>\r\n                <th>Páginas</th>\r\n                <th>Ações</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {(comics) && comics.map((comic, index) => {\r\n                return (\r\n                  <tr role=\"row\" key={comic.id}>\r\n                    <td>\r\n                      <input type=\"checkbox\" \r\n                        onChange={() => toggleSelectedComic(index)} \r\n                        name={`comic-${comic.id}`} id={`comic-${comic.id}`}\r\n                        checked={selectedComics[index]}/>\r\n                    </td>\r\n                    <td>{comic.id}</td>\r\n                    <td>{comic.title}</td>\r\n                    <td>{comic.pageCount}</td>\r\n                    <td>\r\n                      <button type=\"button\" className=\"link\" \r\n                        onClick={() => {\r\n                          setComic(comic);\r\n                          setOpened(!opened);\r\n                        }}>\r\n                          Ver Quadrinho\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n\r\n        {(comics && comics.length === 0) && (\r\n          <table className=\"table table-striped\" role=\"table\">\r\n            <caption role=\"caption\">\r\n              Nenhum Quadrinho\r\n            </caption>\r\n          </table>\r\n        )}\r\n      </div>\r\n\r\n      <Email \r\n        comics={comics} \r\n        selectedComics={selectedComics} \r\n      />\r\n\r\n      <Dialog \r\n        opened={opened} \r\n        onClose={() => setOpened(!opened)}\r\n        content={<Comic comic={comic} />}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst axios = require('axios');\r\n\r\nexport default function Search({ onSearch }) {\r\n\r\n  const [titleStartsWith, setTitleStartsWith] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!titleStartsWith) {\r\n      return;\r\n    }\r\n\r\n    const timeoutId = setTimeout(() => {\r\n      axios.get(`https://gateway.marvel.com:443/v1/public/comics?titleStartsWith=${titleStartsWith}&apikey=620ef48dd36a7a49cdb0868d5363b2b4`)\r\n        .then((response) => {\r\n          console.log(response);\r\n          onSearch(response.data.data.results);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }, 800);\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [onSearch, titleStartsWith]);\r\n\r\n  return (\r\n    <>\r\n      <form className=\"search-form\">\r\n        <h2>Buscar Quadrinho</h2>\r\n        <input\r\n          type='text'\r\n          className='search-input'\r\n          onChange={(e) => setTitleStartsWith(e.currentTarget.value)}\r\n          value={titleStartsWith}\r\n          placeholder=\"Digite para Buscar\"\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport ComicsTable from './comics-table/ComicsTable';\r\nimport Search from '../search/Search';\r\n\r\nexport default function Comics() {\r\n\r\n  const [comics, setComics] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <header className=\"comics-header\">\r\n        <h1>Marvel</h1>\r\n      </header>\r\n      <main className=\"comics-main\">\r\n        <section>\r\n          <Search onSearch={setComics} />\r\n          <ComicsTable comics={comics} />\r\n        </section>\r\n      </main>\r\n      <footer className=\"comics-footer\">\r\n        \r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Comics from './components/comics/Comics';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/comics\">\n          <Comics />\n        </Route>\n        <Redirect exact from=\"/\" to=\"/comics\" />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}